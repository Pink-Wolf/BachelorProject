{
  "type": "class",

  "namespace": "CompWolf",
  "declaration": "class window_user;",
  "briefDescription": "Abstract type containing a reference to a window.",
  "detailedDescription": "Abstract type containing a reference to a window.\nIf the window is freed, then this is freed first.\nAlso contains virtual methods for events related to the window, like when its surface is rebuild.",

  "copyable": true,
  "movable": true,
  "constructor": {
    "overloads": [
      {
        "declaration": "window_user() noexcept;",
        "description": "Constructs a window_user that does not point to any window."
      },
      {
        "declaration": "window_user(window&);",
        "description": "Constructs a window_user with a reference to the given window."
      },
      {
        "declaration": "window_user(const window_user&) noexcept;",
        "description": "window_user is copyable."
      },
      {
        "declaration": "window_user(window_user&&) noexcept;",
        "description": "window_user is movable."
      }
    ],
    "related": [
      "window"
    ]
  },
  "memberGroups": [
    {
      "name": "Accessors",
      "items": [
        {
          "type": "function",
          "name": "target_window",
          "briefDescription": "The window that the object targets.",
          "overloads": [
            {
              "declaration": "auto target_window() noexcept -> window&",
              "description": "The window that the object targets."
            },
            {
              "declaration": "auto target_window() const noexcept -> const window&;",
              "description": "Like (1), but const."
            }
          ],
          "related": [
            "window"
          ]
        },
        {
          "type": "function",
          "name": "has_window",
          "briefDescription": "Protected member access. Whether the object is actually referencing a window.",
          "overloads": [
            {
              "declaration": "protected: auto has_window() const noexcept -> bool",
              "description": "Whether the object is actually referencing a window."
            }
          ]
        }
      ]
    },
    {
      "name": "Modifiers",
      "items": [
        {
          "type": "function",
          "name": "set_window",
          "briefDescription": "Protected member access. Sets what window the object is referencing.",
          "overloads": [
            {
              "declaration": "protected: auto set_window(window*) const noexcept",
              "description": "Sets what window the object is referencing."
            }
          ]
        }
      ]
    },
    {
      "name": "Virtual",
      "items": [
        {
          "type": "function",
          "name": "on_rebuild_surface",
          "briefDescription": "Invoked after the target window's surface is rebuild.",
          "overloads": [
            {
              "declaration": "virtual void on_rebuild_surface(window_rebuild_surface_parameters&);",
              "description": "Invoked after the target window's surface is rebuild."
            }
          ],
          "related": [
            "window_rebuild_surface_parameters"
          ]
        },
        {
          "type": "function",
          "name": "on_window_freeing",
          "briefDescription": "Invoked before the target window is being freed.",
          "overloads": [
            {
              "declaration": "virtual void on_window_freeing();",
              "description": "Invoked before the target window is being freed."
            }
          ]
        }
      ]
    }
  ],

  "related": [
    "window"
  ]
}