{
  "type": "class",

  "namespace": "CompWolf",
  "declaration": "class graphics_environment;",
  "briefDescription": "Sets up program-wide logic used for connecting to gpus.",
  "detailedDescription": "Sets up and manages program-wide logic used for connecting to the gpus.\nThe environment's update-method should normally be called continually.\nThe thread that constructed the graphics_environment is considered the \"main graphics thread\".",
  "warnings": [
    "It is undefined behaviour to construct or destruct a [[graphics_environment]] on a thread other than the one that started the program."
  ],

  "copyable": false,
  "movable": false,
  "constructor": {
    "warnings": [
      "It is undefined behaviour to construct or destruct a [[graphics_environment]] on a thread other than the one that started the program."
    ],

    "overloads": [
      {
        "declaration": "graphics_environment();",
        "description": "Constructs a valid environment, and sets up program-wide logic used for connecting to the gpus."
      },
      {
        "declaration": "graphics_environment(graphics_environment_settings);",
        "description": "Like (1), but the environment has the given properties."
      }
    ],
    "exceptions": [
      "Throws std::runtime_error if there was an error during setup due to causes outside of the program.",
      "Throws std::logic_error if an environment already exists."
    ],

    "related": [
      "graphics_environment_settings"
    ]
  },
  "memberGroups": [
    {
      "name": "Accessors",
      "items": [
        {
          "type": "function",
          "name": "gpus",
          "briefDescription": "Returns the individual connections to each gpu.",
          "overloads": [
            {
              "declaration": "auto gpus() noexcept -> std:vector<gpu_connection>&;",
              "description": "Returns the individual connections to each gpu."
            },
            {
              "declaration": "auto gpus() const noexcept -> const std:vector<gpu_connection>&;",
              "description": "Like (1), but const."
            }
          ],
          "related": [
            "gpu_connection"
          ]
        },
        {
          "type": "function",
          "name": "is_main_thread",
          "briefDescription": "Whether the given thread is the main graphics thread.",
          "overloads": [
            {
              "declaration": "auto is_main_thread(std::thread::id) const noexcept -> bool;",
              "description": "Whether the given thread is the main graphics thread."
            }
          ]
        },
        {
          "type": "function",
          "name": "is_this_main_thread",
          "briefDescription": "Whether the thread calling this is the main graphics thread.",
          "overloads": [
            {
              "declaration": "auto is_this_main_thread() const noexcept -> bool;",
              "description": "Whether the thread calling this is the main graphics thread."
            }
          ]
        }
      ]
    },
    {
      "name": "Modifiers",
      "items": [
        {
          "type": "function",
          "name": "update",
          "briefDescription": "Handles any accumilated jobs, like keyboard inputs.",
          "overloads": [
            {
              "declaration": "void update();",
              "description": "Handles any accumilated jobs, like keyboard inputs."
            }
          ],
          "exceptions": [
            "Throws any exception thrown by code handling the jobs."
          ]
        },
        {
          "type": "variable",
          "name": "updating",
          "declaration": "event<graphics_environment_update_parameter> updating;",
          "briefDescription": "Event invoked before any other logic in the environment's update-method.",
          "detailedDescription": "Event invoked before any other logic in the environment's update-method.",
          "related": [
            "event"
          ]
        },
        {
          "type": "variable",
          "name": "updated",
          "declaration": "event<graphics_environment_update_parameter> updated;",
          "briefDescription": "Event invoked after all other logic in the environment's update-method.",
          "detailedDescription": "Event invoked after all other logic in the environment's update-method.",
          "related": [
            "event"
          ]
        }
      ]
    },
    {
      "name": "Vulkan-related",
      "description": "These members reveal a lower level of abstractions, and so they should rarely be used.",
      "items": [
        {
          "type": "function",
          "name": "vulkan_instance",
          "briefDescription": "Returns the environment's vulkan_instance, representing a VkInstance.",
          "overloads": [
            {
              "declaration": "auto vulkan_instance() const noexcept -> Private::vulkan_instance;",
              "description": "Returns the environment's vulkan_instance, representing a VkInstance."
            }
          ]
        }
      ]
    }
  ],

  "related": [
    "gpu_manager"
  ],

  "example": "simple_window"
}