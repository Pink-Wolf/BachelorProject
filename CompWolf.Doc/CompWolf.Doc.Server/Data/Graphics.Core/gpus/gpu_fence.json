{
  "type": "class",

  "declaration": "class gpu_fence;",
  "namespace": "CompWolf",
  "briefDescription": "Used to tell the cpu when gpu-work is done.",
  "detailedDescription": "A \"fence\", which allows the cpu to know when the gpu has finished some work.",

  "baseClasses": [ "basic_freeable" ],

  "copyable": false,
  "movable": true,
  "constructor": {
    "overloads": [
      {
        "declaration": "gpu_fence() noexcept;",
        "description": "Constructs a freed gpu_fence, as in one that cannot be used."
      },
      {
        "declaration": "gpu_fence(const gpu_connection&);",
        "description": "Creates a fence for the given gpu."
      },
      {
        "declaration": "gpu_fence(const gpu_connection&, bool signaled);",
        "description": "Like (2), but if signaled is true, then the fence states that the gpu-work is already finished."
      },
      {
        "declaration": "gpu_fence(gpu_fence&&) noexcept;",
        "description": "gpu_fence is movable."
      }
    ],
    "exceptions": [
      "Throws std::runtime_error if there was an error during creation of the fence due to causes outside of the program."
    ]
  },
  "methodGroups": [
    {
      "name": "Accessors",
      "items": [
        {
          "name": "gpu",
          "briefDescription": "Returns the gpu that fence is on.",
          "overloads": [
            {
              "declaration": "auto gpu() const noexcept -> const gpu_connection&",
              "description": "Returns the gpu that the fence is on."
            }
          ],
          "related": [
            "gpu_connection"
          ]
        },
        {
          "name": "signaled",
          "briefDescription": "Returns whether the work is done.",
          "overloads": [
            {
              "declaration": "auto signaled() const noexcept -> bool",
              "description": "Returns true if the work is done, otherwise returns false."
            }
          ]
        }
      ]
    },
    {
      "name": "Modifiers",
      "items": [
        {
          "name": "wait",
          "briefDescription": "Returns when the work is done.",
          "overloads": [
            {
              "declaration": "void wait() const noexcept;",
              "description": "Waits until the work is done, and then returns."
            }
          ]
        },
        {
          "name": "reset",
          "briefDescription": "Makes the fence consider its related work not done.",
          "overloads": [
            {
              "declaration": "void reset() noexcept;",
              "description": "Makes the fence consider its related work not done."
            }
          ]
        }
      ]
    },
    {
      "name": "Vulkan-related",
      "description": "These members reveal a lower level of abstractions, and so they should rarely be used.",
      "items": [
        {
          "name": "vulkan_fence",
          "briefDescription": "Returns the vulkan_fence, representing a VkFence.",
          "overloads": [
            {
              "declaration": "auto vulkan_fence() const noexcept -> Private::vulkan_fence;",
              "description": "Returns the vulkan_fence, representing a VkFence."
            }
          ]
        }
      ]
    }
  ]
}