#include "pch.h"
#include "shaders"

#include "compwolf_vulkan.hpp"
#include "shader_field_type.hpp"

namespace CompWolf::Graphics
{
#define COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(type, format_value)					\
	auto shader_field_info<type>::type_info() noexcept -> Private::shader_field_info_handle	\
	{																						\
		static Private::shader_field_info field_info{										\
			.format = format_value															\
		};																					\
		return Private::from_private(&field_info);											\
	}																						\

	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(float, VK_FORMAT_R32_SFLOAT);
	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(float2, VK_FORMAT_R32G32_SFLOAT);
	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(float3, VK_FORMAT_R32G32B32_SFLOAT);
	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(float4, VK_FORMAT_R32G32B32A32_SFLOAT);

	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(double, VK_FORMAT_R64_SFLOAT);
	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(double2, VK_FORMAT_R64G64_SFLOAT);
	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(double3, VK_FORMAT_R64G64B64_SFLOAT);
	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(double4, VK_FORMAT_R64G64B64A64_SFLOAT);

	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(shader_int, VK_FORMAT_R32_SINT);
	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(shader_int2, VK_FORMAT_R32G32_SINT);
	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(shader_int3, VK_FORMAT_R32G32B32_SINT);
	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(shader_int4, VK_FORMAT_R32G32B32A32_SINT);

	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(single_color, VK_FORMAT_R8_SINT);
	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(opaque_color, VK_FORMAT_R8G8B8_SINT);
	COMPWOLF_GRAPHICS_DEFINE_PRIMITIVE_TYPE_INFO(transparent_color, VK_FORMAT_R8G8B8A8_SINT);
}
